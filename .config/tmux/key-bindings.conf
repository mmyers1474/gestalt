# Notes and Modeline {{
# vim: set sw=4 ts=4 sts=4 et tw=100 foldmarker={{,}} foldlevel=9 foldmethod=marker nospell:
#
# command-prompt [-I inputs][-p prompts][-t target-client][template]
# }}

# General key bindings {{
    # First remove all default keybindings.
    #unbind-key -a

    # Restore the default mouse bindings.
    #bind-key -T root    MouseDown1Pane      if-shell -F -t= "#{window_zoomed_flag}" "" "select-pane -t = ; send-keys -M"
    #bind-key -T root    MouseDown1Status    select-window -t =
    #bind-key -T root    MouseDown3Pane      if-shell -F -t= "#{mouse_any_flag}" "select-pane -t=; send-keys -M" "select-pane -mt="
    #bind-key -T root    MouseDrag1Pane      if-shell -F -t= "#{mouse_any_flag}" "if -Ft= "#{pane_in_mode}" "copy-mode -M" "send-keys -M"" "copy-mode -M"
    #bind-key -T root    MouseDrag1Border    resize-pane -M
    #bind-key -T root    WheelUpPane         if-shell -F -t= "#{mouse_any_flag}" "send-keys -M" "if -Ft= "#{pane_in_mode}" "send-keys -M" "copy-mode -et=""
    #bind-key -T root    WheelUpStatus       previous-window
    #bind-key -T root    WheelDownStatus     next-window

# }}

# Core hotkey dispatcher {{
    bind-key -n         F1                  if-shell -F -t= "test -z ${OPER}" "display-message -t= 'Setting operation.'\; setenv OPER Help" "display-message -t= 'Dispatching.'\; "
    #bind-key -n F2
    #bind-key -n F3
    #bind-key -n F4
    #bind-key -n F5
    #bind-key -n F6
    #bind-key -n F7
    #bind-key -n F8
    #bind-key -n F9
    #bind-key -n F10
    #bind-key -n F11
    #bind-key -n F12
# }}
