# Notes and Modeline {{
# vim: set sw=4 ts=4 sts=4 et tw=100 foldmarker={{,}} foldlevel=9 foldmethod=marker nospell:
#
# command-prompt [-I inputs][-p prompts][-t target-client][template]
# }}

# General key bindings {{
    # First remove all default keybindings.
    unbind-key -a

    bind-key        :               command-prompt
    bind-key -n     F2              command-prompt

    # Configuration hot-keys       
    bind-key        R               display-message 'Reloading tmux configuration (.tmux.conf).'\; source-file ~/.tmux.conf

    # Status line functions        
    bind-key        B               set -g status
    bind-key        F5              refresh-client -S
    bind-key        PageUp          set -g status-position top
    bind-key        PageDown        set -g status-position bottom
# }}

# Server, client and session key bindings {{
    # Server functions
#    bind-key        I               server-info
#    bind-key        L               lock-server
#    bind-key        K               kill-server

    # Client functions
#    bind-key        c               resize-pane -Z \; choose-client "switch-client -t '%%'" \; resize-pane -Z -t:!
#    bind-key        C               resize-pane -Z \; choose-client "lock-client -t '%%'" \; resize-pane -Z -t:!
#    bind-key        M-c             resize-pane -Z \; choose-client "suspend-client -t '%%'" \; resize-pane -Z -t:!
    bind-key        d               detach-client
    bind-key        r               refresh-client


    # Session functions
    bind-key        S               command-prompt -p "New session name: " "new-session -d -s '%%'"
    bind-key        s               command-prompt -I "#S" "rename-session '%%'"
    bind-key        M-s             command-prompt -p "Attach to which session: " "attach-session -t '%%'"

    bind-key        l               confirm -p "Lock the current session (Y/N)?" lock-session
    bind-key        x               confirm -p "Kill the current session (Y/N)?" kill-session      

    bind-key        C-s             resize-pane -Z \; choose-session \; resize-pane -Z -t:!
# }}

# Window, pane and layout key bindings {{
    # Windows (tabs) - All window based bindings are triggered off the prefix first. {{
        bind-key    W               command-prompt -p "New window name: ","(Optional) Shell command: " "new-window -n '%%' '%%'"
        bind-key    w               command-prompt -p "What would you like to name this window? " "rename-window '%%'"
        bind-key    M-w             command-prompt -p "Respawn this window with a different shell command: " "respawn-window '%%'"

        bind-key    k               confirm -p "Kill the current window (Y/N)? " "kill-window '%%'"
        bind-key    K               confirm -p "Kill all but the current window (Y/N)? " "kill-window -a"

        bind-key    ^w             resize-pane -Z \; choose-window "select-window -t '%%'" \; resize-pane -Z -t:!
        bind-key    ^S-w           resize-pane -Z \; choose-window "move-window -t '%%'" \; resize-pane -Z -t:!

        bind-key    S-Left          swap-window -t :-
        bind-key    S-Right         swap-window -t :+

        bind-key    C-Left          next-window
        bind-key    C-Right         previous-window

        bind-key    \               split-window -d -h
        bind-key    -               split-window -d -v
    # }}

    # Panes (splits) {{
        bind-key -n M-p             respawn-pane

        # Split the current window or pane and join in a pane from another window.
        bind-key -n M-\             split-window -h \; choose-window "kill-pane ; join-pane -h -s '%%'"
        bind-key -n M--             split-window -v \; choose-window "kill-pane ; join-pane -v -s '%%'"

        # Swap the current pane out for one from another window.
        bind-key -n S-M-\           choose-window "break-pane -d ; join-pane -h -s '%%'"
        bind-key -n S-M--           choose-window "break-pane -d ; join-pane -v -s '%%'"
        
        bind-key -n C-p             resize-pane -Z \; choose-window "move-pane -t '%%'" \; resize-pane -Z -t:!
        
        bind-key -n C-DC            confirm -p "Kill the current pane (Y/N)? " "kill-pane"
        bind-key    DC              confirm -p "Kill all but the current pane (Y/N)? " "kill-pane -a"

        bind-key -n C-Up            select-pane -U
        bind-key -n C-Down          select-pane -D
        bind-key -n C-Right         select-pane -R
        bind-key -n C-Left          select-pane -L

        # Swap the current pane with the pane in the direction select with the arrow key.
        bind-key -n S-Up            swap-pane -t {up-of}
        bind-key -n S-Down          swap-pane -t {down-of}
        bind-key -n S-Right         swap-pane -t {left-of}
        bind-key -n S-Left          swap-pane -t {right-of}

        bind-key -n M-Up            resize-pane -U
        bind-key -n M-Down          resize-pane -D
        bind-key -n M-Right         resize-pane -R
        bind-key -n M-Left          resize-pane -L

        bind-key -n C-z             resize-pane -Z
        bind-key -n C-b             break-pane -d -t "Backgrounded"
        bind-key    h               clear-history

        bind-key -n C-Home          swap-pane -t:.0 \; select-pane -t:.0
        bind-key -n M-1             swap-pane -s:.0 -t:.1
        bind-key -n M-2             swap-pane -s:.0 -t:.2
        bind-key -n M-3             swap-pane -s:.0 -t:.3
        bind-key -n M-4             swap-pane -s:.0 -t:.4
        bind-key -n M-5             swap-pane -s:.0 -t:.5
    # }}

    # Layout {{
#        select-layout
        bind-key    V               select-layout main-vertical
        bind-key    H               select-layout main-horizontal
        bind-key    T               select-layout tiled
        bind-key    v               select-layout even-vertical
        bind-key    h               select-layout even-horizontal
#        next-layout
#        previous-layout
    # }}

# }}

# Buffer key bindings {{
    # Buffer functions
#    list-buffers
#    choose-buffer
#    load-buffer
#    paste-buffer
#    delete-buffer
#    set-buffer
#    show-buffer
# }}

# Restore the default mouse bindings {{
    bind-key -T root            MouseDown1Pane      if-shell -F -t= "#{window_zoomed_flag}" "" "select-pane -t = ; send-keys -M"
    bind-key -T root            MouseDown1Status    select-window -t =
    bind-key -T root            MouseDown3Pane      if-shell -F -t= "#{mouse_any_flag}" "select-pane -t=; send-keys -M" "select-pane -mt="
    bind-key -T root            MouseDrag1Pane      if-shell -F -t= "#{mouse_any_flag}" "if -Ft= "#{pane_in_mode}" "copy-mode -M" "send-keys -M"" "copy-mode -M"
    bind-key -T root            MouseDrag1Border    resize-pane -M
    bind-key -T root            WheelUpPane         if-shell -F -t= "#{mouse_any_flag}" "send-keys -M" "if -Ft= "#{pane_in_mode}" "send-keys -M" "copy-mode -et=""
    bind-key -T root            WheelUpStatus       previous-window
    bind-key -T root            WheelDownStatus     next-window
# }}
